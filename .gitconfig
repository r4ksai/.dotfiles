[core]
  editor = nvim
  ignorecase = false
[push]
	default = simple
[pull]
	rebase = true
[color]
	status = auto
	diff = auto
	branch = auto
	interactive = auto
	grep = auto
	ui = auto
[hub]
	protocol = https
[init]
	defaultBranch = main
[user]
	name = Sai
	email = r4ksai@gmail.com 
[github]
  user = r4ksai
[diff]
	tool = vimdiff
  wordRegex = [[:alnum:]_]+|[^[:alnum:]_[:space:]]+
[difftoll "nvimdiff"]
  cmd = nvim -d \"$LOCAL\" \"$REMOTE\"
  path = 
[mergetool "nvimdiff"]
  cmd = nvim -d \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" --merge \"$MERGED\"
  trustExitCode = true
[alias]
	a = "!git status --short | peco | awk '{print $2}' | xargs git add"
	d = diff
	co = checkout
	ci = commit
	ca = commit -a
	ps = "!git push origin $(git rev-parse --abbrev-ref HEAD)"
	pl = "!git pull origin $(git rev-parse --abbrev-ref HEAD)"
	st = status
	br = branch
	ba = branch -a
	bm = branch --merged
	bn = branch --no-merged
	df = "!git hist | peco | awk '{print $2}' | xargs -I {} git diff {}^ {}"
  dw = diff --color-words
	stpu = stash push
	hist = log --pretty=format:\"%Cgreen%h %Creset%cd %Cblue[%cn] %Creset%s%C(yellow)%d%C(reset)\" --graph --date=relative --decorate --all
	llog = log --graph --name-status --pretty=format:\"%C(red)%h %C(reset)(%cd) %C(green)%an %Creset%s %C(yellow)%d%Creset\" --date=relative
	open = "!hub browse"
	type = cat-file -t
	dump = cat-file -p
	find = "!f() { git log --pretty=format:\"%h %cd [%cn] %s%d\" --date=relative -S'pretty' -S\"$@\" | peco | awk '{print $1}' | xargs -I {} git diff {}^ {}; }; f"
	# edit conflicted file on merge
	edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"
	# add conflicted file on merge
	add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
